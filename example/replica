\(rid : Text) ->
  let Prelude = ./Prelude.dhall

  let lib = ./lib.dhall

  let debug = lib.defaultDebug // { setup = 1 }

  let peers =
        { alpha = { host = "localhost", port = 8090 }
        , beta = { host = "localhost", port = 8091 }
        , gamma = { host = "localhost", port = 8092 }
        }

  let exprDuration = 10

  let escrow =
        \(rate : Double) ->
          { rate
          , duration = exprDuration
          , setup = lib.escrow { amount = 100000, bufferFactor = 50 }
          }

  let token =
        \(rate : Double) -> { rate, duration = exprDuration, setup = lib.token }

  let experiments =
          Prelude.List.map Double lib.Experiment token (lib.mkDRange 50 50 24)
        # Prelude.List.map Double lib.Experiment escrow (lib.mkDRange 50 50 24)

  let grantThreshold = Some 500

  in  { local =
        { id = rid
        , debug
        , outPath = Some "./results/${rid}.csv"
        , grantThreshold
        }
      , network = toMap peers
      , experiments
      , index = 0
      }
